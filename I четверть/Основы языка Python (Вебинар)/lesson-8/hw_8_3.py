# Задание # 3
# Создайте собственный класс-исключение, который должен проверять содержимое списка на
# наличие только чисел. Проверить работу исключения на реальном примере. Необходимо
# запрашивать у пользователя данные и заполнять список только числами. Класс-исключение
# должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока
# пользователь сам не остановит работу скрипта, введя, например, команду “stop”. При этом
# скрипт завершается, сформированный список с числами выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и
# строки. При вводе пользователем очередного элемента необходимо реализовать проверку
# типа элемента и вносить его в список, только если введено число. Класс-исключение должен
# не позволить пользователю ввести текст (не число) и отобразить соответствующее
# сообщение. При этом работа скрипта не должна завершаться.


class MyValueErrorException(Exception):

    def __init__(self, value):
        self.value = value

    def __str__(self):
        return repr(self.value)


if __name__ == '__main__':

    result = []

    while True:
        try:
            str_var = input('Введите целое число (пустая строка - окончание ввода): ')
            if str_var == '':
                break
            elif not str_var.isdigit():
                raise MyValueErrorException('Ошибка! Исключение! Строка не может быть конвертирована в целое число.')
            else:
                result.append(int(str_var))
        except MyValueErrorException as mvee:
            print(mvee)
        except Exception as ex:
            print(ex)

    print(result)
